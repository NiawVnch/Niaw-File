############# Tinker Board Initial Setup #################
#Update and Upgrade Your System

sudo apt update
sudo apt upgrade

#Install python
sudo apt install python3
sudo apt install python3-tk

#Install pip
sudo apt install python3-pip

#(No Need) Install Required Dependencies
sudo apt install build-essential cmake git pkg-config libjpeg-dev libtiff5-dev libjasper-dev libpng-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk2.0-dev libatlas-base-dev gfortran python3-dev python3-pip libhdf5-dev

# (No Need) Update and install build dependencies
sudo apt install python3-dev python3-pip python3-venv build-essential libhdf5-dev
sudo apt install libasound2-dev -y
sudo apt install alsa-utils -y

#install firefox
sudo apt install firefox-esr

#install VScode

<Download VS code installation file from official site to /linaro/Download>

cd Downloads

sudo dpkg -i code_XXXXXXX_arm64.deb
<Example> sudo dpkg -i code_1.90.1-1718139718_arm64.deb

#Install the Required Dependencies
sudo apt-get update
sudo apt-get install -y libgtk2.0-dev pkg-config

#install library
sudo python3 -m pip install opencv-python scipy pandas matplotlib paho-mqtt
sudo python3 -m pip install tensorflow==2.12.0 scikit-learn==1.4.2 scikit-image tflite-runtime
pip3 install simpleaudio

#Install MQTT broker on tinker board
sudo apt-get install mosquitto mosquitto-clients

############# Tinker Board Setup - AI Vision #################
#Set up auto run AI Code
sudo apt-get install xserver-common
sudo apt-get install xvfb
sudo apt install nano
sudo nano /etc/systemd/system/cycle_time_script.service

<Fill this to the service file -> Ctl+O -> Enter -> Ctl+X >

[Unit]
Description=Cycle Time Python Script
After=network.target

[Service]
Type=simple
ExecStart=/usr/bin/python3 /home/linaro/Downloads/CycleTime_DY08_P6_main_02.py
Restart=always
RestartSec=10
User=linaro
Environment="DISPLAY=:0"
Environment="XAUTHORITY=/home/linaro/.Xauthority"
WorkingDirectory=/home/linaro/Downloads

[Install]
WantedBy=multi-user.target

<<<<<<<>>>>>>>

<Start service commands>
sudo systemctl daemon-reload
sudo systemctl enable cycle_time_script.service
sudo systemctl start cycle_time_script.service

<Check status/See logs/Disable Commands>
sudo systemctl status cycle_time_script.service
journalctl -u cycle_time_script.service
sudo systemctl stop cycle_time_script.service
sudo systemctl disable cycle_time_script.service

<Setup remote desktop from VNC viewer to Tinkerboard>

##Remote tinker board setup (Manual)
sudo apt-get install xfonts-base
sudo apt-get install tightvncserver
sudo apt install lxde -y
vncserver -localhost no

<log out and change desktop environment to lxde>
vncserver 
<Enter tinker board password> 

<Additional commands>
#Check port (listen)
sudo netstat -tunlp

#Close VNC server
vncserver -kill :1  # "1" = port (5901 -> 1, 5902 -> 2)

##Remote tinker board setup (Automatic)
sudo apt-get update
sudo apt-get install xfonts-base
sudo apt-get install tightvncserver
sudo apt install lxde -y

nano /home/linaro/start_vnc.sh

<Paste this to the .sh file>
#!/bin/bash
vncserver -localhost no
vncserver -kill :1
vncserver :1 
<<<<<<>>>>>>>>

<or>

<Paste this to the .sh file>
#!/bin/bash
/usr/bin/vncserver -localhost no
/usr/bin/vncserver -kill :1
/usr/bin/vncserver :1 
<<<<<<>>>>>>>>

chmod +x /home/linaro/start_vnc.sh

sudo nano /etc/systemd/system/vncserver.service

<Paste this to the .service file>
[Unit]
Description=Start TightVNC server at startup
After=syslog.target network.target

[Service]
Type=forking
User=linaro
WorkingDirectory=/home/linaro
Environment=HOME=/home/linaro
ExecStart=/home/linaro/start_vnc.sh
ExecStop=/usr/bin/vncserver -kill :1

[Install]
WantedBy=multi-user.target
<<<<<<>>>>>>>>

sudo systemctl daemon-reload
sudo systemctl enable vncserver.service
sudo systemctl start vncserver.service

<Additional Commands>
sudo systemctl status vncserver.service

#File transfering from Tinker Board to Windows PC, Vice versa
sudo apt-get install openssh-server
sudo ifconfig # check tinker boad ip addr


############# Windows PC Setup - AI Vision #################

#Check IP address of windows pc wlp1s0, wlan
ipconfig

#Install MQTT broker on host windows pc
1) Manually download on msoquitto website
2) Locate the mosquitto.conf file, which is typically found in the directory where you installed Mosquitto (e.g., C:\Program Files\mosquitto).
Edit mosquitto.conf by notepad to
listener 1883
allow_anonymous true
3) Start MQTT on windows as broker
cd "C:\Program Files\mosquitto"
mosquitto -v -c mosquitto.conf

#Windows PC VNC setup
1) install VNC viewer
2) Fill ip address:port Ex. 192.168.112:5901
3) Fill password of tinker board
4) Done the tinker board screen will showed

#Windows PC File Transfering Program Setup
Download WinSCP on website

-Open WinSCP:
Create a new session with the following details:
File Protocol: SFTP
Host name: IP address of your Tinkerboard
Port number: 22 (default for SSH)
User name: Your Tinkerboard's username (e.g., root or pi)
Password: Your Tinkerboard's password
-Transfer Files:
Navigate to the directory on your Tinkerboard where the file is located.
Navigate to the desired directory on your Windows PC.
Drag and drop the file from your Tinkerboard to your PC.

#Manual File Transfering using terminal on windows pc
#to tinker board
scp path\to\local\file username@tinkerboard_ip:path\to\remote\directory
scp C:\Users\YourUser\Documents\file.txt root@192.168.1.100:/home/root/
#to windows pc
scp username@tinkerboard_ip:path\to\remote\file path\to\local\directory
scp root@192.168.1.100:/home/root/file.txt C:\Users\YourUser\Documents\


################## Common Use Command ##################
#Show camera index (after "video")
v4l2-ctl --list-devices

# Test USB Camera
<Ensure you have "Test Camera.py" in /linaro/Download>

cd Downloads
python3 "Test Camera.py"

#get IP address of tinker board wlp1s0, wlan
sudo ifconfig

#Rule file for allow 1883/5901 port firewall
sudo mkdir -p /etc/iptables
sudo iptables -A INPUT -p tcp --dport 1883 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 5901 -j ACCEPT
sudo iptables-save | sudo tee /etc/iptables/rules.v4 > /dev/null
